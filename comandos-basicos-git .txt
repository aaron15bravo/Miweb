clear = limpiar terminal 
ls = listar elementos de un directorio 
pwd = no indica el directorio donde nos encotramos
cd (nombre del directorio) = para entrar a un directorio
cd .. = salir de un directorio
mkdir (nombre del directorio) = crear un directorio
git init = inicializa un repositorio en git 
ls -a = mostrar archivos ocultos
code . = abrira la carpeta donde te encuentras en tu editor de codigo 
git status = muestra el estado actual del repositorio
git add (nombre del archivo) = agregar archivos y cambios del proyecto a git
git commit -m "Mensaje" = para guardar los cambios
git commit = abriba el editor de texto y podremo nosotros poner el mensaje directamente en el archivo
rm (nombre del archivo) = eliminar un archivo (sin embargo aun se debe comprobar con el comando "add")
git restore --staged (nombre del archivo) = recuperamremos un archivo eliminado que se encuentra aun en el stage
git restore = quita un archivo del stage para seguirle haciendo cambios
mv (archivo) (nombre nuevo del archivo) = para cambiar e nombre a un archivo (se debe comprobar con add poniendo tanto el nombre del archivo viejo como el nuevo nombre)
git status -s = nos mestra los archivos com cambios sin guardarlos en el stage
git diff = no muestra los cambios antes de agregarlos a stage
git diff --stage = nos muestra los cambios en el stage
git log = ver en detalles el historial del proyecto
git log --oneline = vista mas simple del historial
git brach = para ver la rama en la que estamos trabajando 
git checkout -b (nombre de la rama) = para crer un nueva rama o cambiar de rama 
cat (nombre del archivo) = muestra el contenido de un archivo 
git push = para guardar los cambios de una rama en github (servidor en la nube)
git push -u (nombre de la rama) = crear rama en el servidor que ya esta creada en local
  